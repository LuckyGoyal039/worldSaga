// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email_id        String    @unique
  username        String
  password        String
  plan_id         Int
  plan_start_date DateTime  @default(now())
  plan_end_date   DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now())
  last_login      DateTime  @default(now())
  status          Int       @default(1)
  posts           Post[]
  Comment         Comment[]
  Plans           Plans[]
}

model Plans {
  id          Int      @id @default(autoincrement())
  plan_name   String   @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  price       Float
  description String?
  userId      Int?
  User        User?    @relation(fields: [userId], references: [id])
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean   @default(false)
  authorId   Int
  tags       String[]
  category   String
  logoUrl    String?
  likes      Int       @default(0)
  views      Int       @default(0)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  comments   Comment[] @relation("PostComments")
  author     User      @relation(fields: [authorId], references: [id])
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  postId    Int
  authorId  Int
  parentId  Int?
  children  Comment[] @relation("ChildComments")
  post      Post      @relation(fields: [postId], references: [id], name: "PostComments")
  author    User      @relation(fields: [authorId], references: [id])
  parent    Comment?  @relation("ChildComments", fields: [parentId], references: [id])
}
